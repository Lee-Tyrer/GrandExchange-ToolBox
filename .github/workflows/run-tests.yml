# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python application

env:
  POETRY_VERSION: 1.4.2

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python 3.10
        uses: actions/setup-python@v3
        with:
          python-version: "3.10"

      - name: cache poetry install
        uses: actions/cache@v2
        with:
          path: ~/.local
          key: echo "poetry-$POETRY_VERSION"

      - name: install poetry
        uses: snok/install-poetry@v1
        with:
          version: $POETRY_VERSION
          virtualenvs-create: true
          virtualenvs-in-project: true

      - name: cache dependencies
        id: cache-dependencies
        uses: actions/cache@v2
        with:
          path: .venv
          key: pydeps-${{ hashFiles('**/poetry.lock')}}

      - run: poetry install --no-interaction --no-root
        if: steps.cache-dependencies.outputs.cache-hit != 'true'
      - run: poetry install --no-interaction
        
      - name: run pytest
        run: poetry run pytest
